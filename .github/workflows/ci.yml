name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: bahmutov/npm-install@v1
    - name: Lint Javascript
      run: yarn lint
  unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: bahmutov/npm-install@v1
    - name: Test
      run: yarn test:ci
    - name: Upload jest-coverage
      uses: actions/upload-artifact@v1
      with:
        name: jest-coverage
        path: jest-coverage/coverage-final.json
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: bahmutov/npm-install@v1
    - name: Build
      run: yarn build
      env:
        NEXT_PUBLIC_CONTENTFUL_SPACE_ID: ${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }}
        NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN }}
        LOG_LEVEL: 3
  e2e:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cypress-io/github-action@v2
      with:
        build: yarn build
        command: yarn pree2e && yarn e2e:ci
      env:
        NEXT_PUBLIC_CONTENTFUL_SPACE_ID: ${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }}
        NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN }}
        LOG_LEVEL: 3
    - name: Upload cypress-coverage
      uses: actions/upload-artifact@v1
      with:
        name: cypress-coverage
        path: cypress-coverage/coverage-final.json
  coverage:
    runs-on: ubuntu-latest
    needs: [unit, e2e]
    steps:
    - uses: actions/checkout@v2
    - name: Download jest-coverage
      uses: actions/download-artifact@v1
      with:
        name: jest-coverage
    - name: Download cypress-coverage
      uses: actions/download-artifact@v1
      with:
        name: cypress-coverage
    - uses: bahmutov/npm-install@v1
    - name: Merge Code Coverage
      run: yarn coverage
    - name: Codecov
      uses: codecov/codecov-action@v1.0.10
      with:
        name: Mintel.me
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Vercel
        uses: amondnet/vercel-action@v19.0.1+1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--build-env NEXT_PUBLIC_CONTENTFUL_SPACE_ID=${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }} --build-env NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN=${{ secrets.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN }}'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true
          github-deployment: true
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPOSITORY_DISPATCH_TOKEN }}
          event-type: vercel-deployed
